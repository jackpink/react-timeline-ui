{"mappings":";;;;;ACAA;;;ACAA;;;;AAUA,SAAS,6BAAU,QAA8B,EAAE,UAAkB,sCAAsC,EAAK;IAChH,IAAI,aAAa,aAAa,aAAa,IAAI,EAC3C,MAAM,IAAI,UAAU,SAAS;IAGjC,OAAO;AACP;AAEA,MAAM,yCAAmB,CAAC,aAAwB,KAAc;IAChE,oBAAoB;IACpB,MAAM,iBAA4B,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC;IAC5D,MAAM,eAAsB,6BAAO,eAAe,IAAI,CAAC,CAAC,IAAe,EAAE,EAAE,KAAK,KAAK,KAAK;IAC1F,eAAe;IACf,IAAI,iBAAiB,WACjB,qBAAqB;IACrB,6BAAO,eAAe,IAAI,CAAC,CAAC,IAAe,EAAE,EAAE,KAAK,KAAK,KAAK,GAAG,CAAA,GAAA,yCAAI,EAAE,SAAS;SAC7E,IAAI,iBAAiB,aACxB,qBAAqB;IACrB,6BAAO,eAAe,IAAI,CAAC,CAAC,IAAe,EAAE,EAAE,KAAK,KAAK,KAAK,GAAG,CAAA,GAAA,yCAAI,EAAE,OAAO;IAElF,OAAO;AACP;AAEA,MAAM,gCAAkC,CAAC,QAAU;IAE/C,MAAM,eAAE,YAAW,kBAAE,eAAc,SAAE,MAAK,EAAE,GAAG;IAE/C,MAAM,UAAkB,MAAM,KAAK,KAAK;IAExC,MAAM,UAAU,IAAM;QAClB,MAAM,gBAAgB,uCAAiB,aAAa,MAAM,EAAE;QAC5D,eAAe;IACjB;IAEF,qBACI,iBAAC;QAAI,WAAU;QAAuB,SAAS;;0BAC3C,gBAAC;gBAAK,WAAU;;0BAChB,gBAAC;gBAAK,WAAW,CAAA,GAAA,iBAAS,EAAE,UAAU,UAAU,gBAAgB,eAAe,mBAAmB,mBAAmB,kBAAkB,wBAAwB;oBAAC,qBAAoB;oBAAS,0BAAyB;gBAAO;gBAAI,IAAG;;0BACpO,gBAAC;gBAAK,WAAU;;0BAChB,gBAAC;gBAAK,WAAU;;0BAChB,gBAAC;gBAAK,WAAU;0BAAqD,MAAM,KAAK;;;;AAG5F;IAEA,2CAAe;;;IDnDR;UAAK,KAAK;IAAL,MACV,aAAU;IADA,MAEV,eAAY;GAFF,8CAAA;AAkBZ,IAAI,gDAAsC;IAAC;QAAC,OAAO;QAAe,IAAI;QAAG,OAAO,0CAAM,OAAO;IAAA;IAAG;QAAC,OAAO;QAAc,IAAI;QAAG,OAAO,0CAAM,OAAO;IAAA;IAAG;QAAC,OAAO;QAAgB,IAAI;QAAG,OAAO,0CAAM,OAAO;IAAA;IAAG;QAAC,OAAO;QAAa,IAAI;QAAG,OAAO,0CAAM,OAAO;IAAA;IAAG;QAAC,OAAO;QAAS,IAAI;QAAG,OAAO,0CAAM,OAAO;IAAA;CAAE;AAE3S,MAAM,mDAAuC,CAAC,iBAA+B;IAC3E,gDAA0B;IAC1B,QAAQ,GAAG,CAAC;AACd;AAEA,MAAM,iCAAoC,CAAC,QAAU;IACjD,qCAAqC;IACrC,MAAM,eAAE,cAAc,gDAAyB,GAAG;IAClD,MAAM,kBAAE,iBAAiB,mDAA4B,GAAG;IAE1D,qBACI,gBAAC;QAAG,WAAU;kBACX,YAAY,GAAG,CAAC,CAAC,QAAU;YAC1B,qBACE,gBAAC;gBAAG,WAAU;0BACZ,cAAA,gBAAC,CAAA,GAAA,wCAAO,AAAD;oBAAE,aAAa;oBAAa,gBAAgB;oBAAgB,OAAO;;eADA,MAAM,EAAE;QAGxF;;AAGR;IAEE,2CAAe;;AD9CjB","sources":["src/index.ts","src/Timeline.tsx","src/Element.tsx"],"sourcesContent":["import Timeline from \"./Timeline\";\n\nexport { Timeline };","import React, { useState } from \"react\";\nimport './index.css';\nimport Element from \"./Element\";\n\nexport enum State {\n  checked = \"CHECKED\",\n  unchecked = \"UNCHECKED\"\n}\n\nexport interface EventObj {\n  label: string,\n  id: number,\n  state: State,\n}\n\n\nexport interface TimelineProps {\n  label: string,\n  eventStates: EventObj[],\n  setEventStates: Function\n}\n\nlet eventStatesDefaultProps: EventObj[] = [{label: \"First Event\", id: 1, state: State.checked}, {label: \"next Event\", id: 2, state: State.checked}, {label: \"Add Your Own\", id: 3, state: State.checked}, {label: \"Events As\", id: 5, state: State.checked}, {label: \"Props\", id: 6, state: State.checked}]\n\nconst setEventStatesDefaultProps: Function = (newEventStates: EventObj[]) => {\n  eventStatesDefaultProps = newEventStates;\n  console.log(newEventStates);\n}\n\nconst Timeline: React.FC<TimelineProps> = (props) => {\n    //const {label = \"timeline\"} = props;\n    const { eventStates = eventStatesDefaultProps } = props;\n    const { setEventStates = setEventStatesDefaultProps } = props;\n\n  return(\n      <ul className=\"tw-table tw-w-full\">\n        {eventStates.map((event) => {\n          return(\n            <li className=\"tw-table-cell tw-relative tw-cursor-pointer tw-text-sm\" key={event.id}>\n              <Element eventStates={eventStates} setEventStates={setEventStates} event={event} />\n            </li>            )\n        })}\n      </ul>\n  );\n};\n  \n  export default Timeline;","import React from \"react\";\nimport classNames from \"classnames\";\nimport { EventObj, State } from \"./Timeline\";\n\nexport interface ElementProps {\n    eventStates: EventObj[],\n    setEventStates: Function,\n    event: EventObj\n  }\n\nfunction ensure<T>(argument: T | undefined | null, message: string = 'This value was promised to be there.'): T {\nif (argument === undefined || argument === null) {\n    throw new TypeError(message);\n}\n\nreturn argument;\n}\n\nconst updateItemStates = (eventStates:EventObj[], id:number) => {\n// get current state\nconst newEventStates:EventObj[] = JSON.parse(JSON.stringify(eventStates));\nconst currentState: State = ensure(newEventStates.find((i:EventObj) => i.id === id)).state;\n// toggle state\nif (currentState === \"CHECKED\") {\n    //change to unchecked\n    ensure(newEventStates.find((i:EventObj) => i.id === id)).state = State.unchecked;\n} else if (currentState === \"UNCHECKED\") {\n    //change to unchecked\n    ensure(newEventStates.find((i:EventObj) => i.id === id)).state = State.checked;\n}\nreturn newEventStates;\n}\n\nconst Element: React.FC<ElementProps> = (props) => {\n\n    const { eventStates, setEventStates, event } = props;\n\n    const checked:boolean = event.state === \"CHECKED\";\n\n    const onClick = () => {\n        const newEventState = updateItemStates(eventStates, event.id);\n        setEventStates(newEventState);\n      }\n\n    return(\n        <div className=\"tw-flex tw-flex-wrap\" onClick={onClick}>\n            <span className=\"tw-flex-1 tw-whitespace-nowrap tw-bg-black tw-my-3\"></span>\n            <span className={classNames(\"tw-h-8\", \"tw-w-8\", \"tw-flex-none\", \"tw-border-2\", \"tw-border-solid\", \"tw-border-black\", \"tw-rounded-2xl\", \"tw-whitespace-nowrap\", {\"tw-bg-emerald-600\":checked, \"after:tw-content-['âœ“']\":checked})} id=\"element-radio\"></span>\n            <span className=\"tw-flex-1 tw-whitespace-nowrap tw-bg-black tw-my-3\"></span>\n            <span className=\"tw-flex-1 tw-basis-full tw-w-0\"></span>\n            <span className=\"tw-px-4 tw-cursor-pointer tw-basis-full tw-top-24\">{event.label}</span>\n        </div>\n    )\n}\n\nexport default Element;"],"names":[],"version":3,"file":"index.js.map"}